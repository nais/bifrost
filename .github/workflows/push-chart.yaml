name: Build and push charts

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '.gitignore'
env:
  HELM_VERSION: '3.10.2'
  GOOGLE_REGISTRY: 'europe-north1-docker.pkg.dev'

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: 'gh-helm-charts@nais-io.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Log in to Google Artifact Registry'
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://${{ env.GOOGLE_REGISTRY }}

      - uses: azure/setup-helm@v3
        name: 'Setup Helm'
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.7.8

      - name: Build Chart
        run: |-
          prev_chart="-"
          for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            if [[ "$file" == .github/workflows/main.yaml ]]; then
              for chart in charts/*; do
                echo "Building: $chart"
                helm package --dependency-update "$chart"
              done
            break
            fi

            for chart in charts/*; do
              if [[ "$prev_chart" == "$chart" ]]; then
                continue
              fi
          
              if [[ "$file" == *"$chart"* ]]; then
                echo "Building: $chart"
                prev_chart="$chart"
                helm package --dependency-update "$chart"
              fi
            done
          done

      - name: Push Chart
        run: |-
          if [[ -z "$(ls -A *.tgz)" ]]; then
            echo "No charts to push"
            exit 0
          fi
          
          for chart in *.tgz; do
            echo "Pushing: $chart"
            helm push "$chart" oci://${{ env.GOOGLE_REGISTRY }}/nais-io/nais
          done
